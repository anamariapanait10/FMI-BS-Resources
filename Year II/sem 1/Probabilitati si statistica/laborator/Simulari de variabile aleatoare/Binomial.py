# -*- coding: utf-8 -*-
"""Binomial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EfD8bu1cCKaXZxv48mt2UFOSgPUbxkr9
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import binom

def binomial(N, n, p):
  P = []
  binomial_values = []

  for i in range(N): #pentru fiecare valoare din omega
    binomial = 0
    for j in range(n):
      x = np.random.uniform(0, 1)
      if x < p:
        binomial += 1
    binomial_values.append(binomial)

  ctr = 0
  for i in range(max(n + 1, max(binomial_values))):
    P.append(binomial_values.count(i)/N)

  plt.scatter(range(n+1), P, color = 'r', label = 'frequential')
  x = np.arange(0, n + 1)
  binomial_pmf = binom.pmf(x, n, p)

  plt.scatter(range(n+1), binomial_pmf, color = 'b', label = 'built-in pmf')
  plt.legend()
  plt.show()

def main():    
    binomial(10000, 100, 0.4) 
  
if __name__ == "__main__":
    main()